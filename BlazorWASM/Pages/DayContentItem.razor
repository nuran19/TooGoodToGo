@*@page "/DayContents/{id:int}" *@
@page "/DayContentsItems/{id:int}"
@using Domain.DTOs
@using Domain.Models
@using HttpClients.ClientInterfaces
@using Microsoft.VisualBasic
@using System.Security.Claims
@inject IDayContentService DayContentService;
@inject NavigationManager navMgr;
@inject IProductService ProductService;

@attribute [Authorize] 

<div class="card">
        
    <h3>View Day Content Item</h3>
    
    @if (dayContentItem != null)
    {
        <div class="separator">
            <h2>Day Content</h2>
            </div>
        <div class="panel">
        <h4>Id</h4>
        <p>@dayContentItem.Id</p>
        <h4>Date</h4>
        <p>@dayContentItem.Date.ToString()</p>
        </div>

        <div class="separator">
            <h2>Day Content Products</h2> </div>
        <div class="panel">
            <table class="table">
                <thead>
                <tr>
                    <th>Product Id</th>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Reason</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var product in dayContentItemProducts)
                {
                    <tr>
                        <td>@product.ProductId</td>
                        <td>@product.ProductName </td>
                        <td>@product.Quantity</td>
                        <td>@product.Reason</td>

                    </tr>
                }
                </tbody>
            </table>
             <button @onclick="@(() => GoToManageDayContent())" class="deletebtn" style="width: 150px">Update</button>
        </div>
       
    }
     else
        {
            <p>DayContent not found.</p>
        }
    
        @if (!string.IsNullOrEmpty(msg))
        {
            <p>Error: @msg</p>
        }
</div>

@code {
    
    [Parameter]
    
    public int Id { get; set; }

    private DayContentBasicDto dayContentItem;
    private ICollection<DayContentProductDetail> dayContentItemProducts = new List<DayContentProductDetail>() {};

    private string msg = "";
    
    protected override async Task OnInitializedAsync()  //loading when page opens
    {
        
        try
        {
            dayContentItem = await DayContentService.GetByIdAsync(Id);
            dayContentItemProducts = await DayContentService.GetDayContentDetailAsync(Id);
            
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
    private async Task GoToManageDayContent()
    {
        navMgr.NavigateTo($"/ManageDayContent/{Id}");
    } 
    
}