@page "/ContentsDaysOverview"
@inject IDayContentService DayContentService
@using global::Shared.Models
@using HttpClients.ClientInterfaces
@using System.Globalization

@attribute [Authorize] 
@* need to be logged in for access*@

<div class="container">
    <div class="card">
        <div class="card-header">
            <h3 class="mb-0">Contents Days Overview</h3>
        </div>
        <div class="card-body">
            <form>
                <div class="form-group">
                    <label for="selectMonth">Select Month:</label>
                    <select class="form-control" id="selectMonth" @bind="selectedMonth">
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label for="selectYear">Select Year:</label>
                    <select class="form-control" id="selectYear" @bind="selectedYear">
                        @for (int year = DateTime.Now.Year; year >= 2000; year--)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>
                </div>

                <button type="button" class="btn btn-success" @onclick="LoadMonthEntries">Search</button>
            </form>

            @if (monthEntries != null)
            {
                <div class="mt-4">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Month Entries: </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var entry in monthEntries)
                            {
                                <tr>
                                    <td>
                                        <a href="/ManageDayContent/@entry.Id">
                                        @entry.Date.ToShortDateString()
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private string selectedMonth = CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(DateTime.Now.Month);
    private int selectedYear = DateTime.Now.Year;
    private List<DayContent> monthEntries;
    
    protected override async Task OnInitializedAsync()
    {
    // Load the last 7 days' entries on initialization
        await LoadLast7DaysEntries();
        
    } 
    
    private async Task LoadLast7DaysEntries()
    {
    // Calculate the date range for the last 7 days
        //DateTime endDate = DateTime.Now.Date;
        //DateTime startDate = endDate.AddDays(-6); // 6 days ago
        DateOnly endDate = DateOnly.FromDateTime(DateTime.Now.Date);
        DateOnly startDate = endDate.AddDays(-6); // 6 days ago
    // Fetch entries for the specified date range
        monthEntries = await DayContentService.GetEntriesForDateRange(startDate, endDate);
    }
    
    private async Task LoadMonthEntries()
    {
        try
        {
            int monthNumber = Array.IndexOf(CultureInfo.CurrentCulture.DateTimeFormat.MonthNames, selectedMonth) + 1;
            monthEntries = await DayContentService.GetMonthEntries(monthNumber, selectedYear);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

}
